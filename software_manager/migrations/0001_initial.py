# Generated by Django 4.1.5 on 2023-01-25 13:24

import django.core.validators
import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("extras", "0084_staging"),
        ("dcim", "0167_module_status"),
    ]

    operations = [
        migrations.CreateModel(
            name="SoftwareImage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="software-images/",
                        validators=[django.core.validators.FileExtensionValidator(allowed_extensions=["bin"])],
                    ),
                ),
                ("md5sum", models.CharField(blank=True, max_length=36)),
                ("md5sum_calculated", models.CharField(blank=True, max_length=36)),
                ("version", models.CharField(blank=True, max_length=32)),
                ("filename", models.CharField(blank=True, max_length=256)),
                ("comments", models.TextField(blank=True)),
                ("tags", taggit.managers.TaggableManager(through="extras.TaggedItem", to="extras.Tag")),
            ],
            options={
                "ordering": ["-filename", "-version"],
            },
        ),
        migrations.CreateModel(
            name="ScheduledTask",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder),
                ),
                ("task_type", models.CharField(default="upload", max_length=255)),
                ("job_id", models.CharField(blank=True, max_length=255)),
                ("status", models.CharField(default="unknown", max_length=255)),
                ("message", models.CharField(blank=True, max_length=512)),
                ("fail_reason", models.CharField(default="fail-unknown", max_length=255)),
                ("confirmed", models.BooleanField(default=False)),
                ("scheduled_time", models.DateTimeField(null=True)),
                ("start_time", models.DateTimeField(null=True)),
                ("end_time", models.DateTimeField(null=True)),
                ("mw_duration", models.PositiveIntegerField(null=True)),
                ("log", models.TextField(blank=True)),
                ("user", models.CharField(blank=True, max_length=255)),
                ("transfer_method", models.CharField(default="ftp", max_length=8)),
                (
                    "device",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="dcim.device"),
                ),
                ("tags", taggit.managers.TaggableManager(through="extras.TaggedItem", to="extras.Tag")),
            ],
            options={
                "verbose_name": "Scheduled Task",
                "ordering": ["-scheduled_time", "-start_time", "-end_time", "job_id"],
            },
        ),
        migrations.CreateModel(
            name="GoldenImage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder),
                ),
                (
                    "pid",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name="golden_image", to="dcim.devicetype"
                    ),
                ),
                (
                    "sw",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="software_manager.softwareimage",
                    ),
                ),
                ("tags", taggit.managers.TaggableManager(through="extras.TaggedItem", to="extras.Tag")),
            ],
            options={
                "verbose_name": "Golden Image",
                "ordering": ["pid"],
            },
        ),
    ]
